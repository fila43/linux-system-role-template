# SPDX-License-Identifier: MIT
---
# Put the tasks for your role here.

- name: Set platform/version specific variables
  include_tasks: tasks/set_vars.yml

- name: Check if requested version is supported in the system (RHEL8)
  fail:
    msg: "RHEL 8 supports only Postgresql 10, 12 and 13"
  when:
    - ansible_facts['os_family'] == "RedHat"
    - ansible_facts['distribution_major_version'] == "8"
    - postgresql_version not in rhel8_streams

- name: Check if requested version is supported in system (RHEL9)
  fail:
    msg: "RHEL 9 supports only Postgresql 13"
  when:
    - ansible_facts['os_family'] == "RedHat"
    - ansible_facts['distribution_major_version'] == "9"
    - postgresql version not in rhel9_streams

- name: Check requested and installed version of Postgresql
  fail:
    msg: "Setting version {{ postgresql_version }} while {{ ansible_facts.packages['postgresql'][0].version }} is installed"
  when:
    - "'postgresql' in ansible_facts.packages"
    - ansible_facts.packages['postgresql'][0].version | regex_search('([0-9]*).', '\\1') | first !=  postgresql_version

- name: Ensure required packages are installed on RHEL8 based systems
  package:
    name: "@postgresql:{{ postgresql_version }}/server"
    state: present
  when:
    - ansible_facts['os_family'] == "RedHat"
    - ansible_facts['distribution_major_version'] == "8"

# RHEL 9 doesn't support modules yet
- name: Ensure required packages are installed on RHEL9 based systems and others
  package:
    name: "postgresql-server"
    state: present
  when:
    - ansible_facts['distribution_major_version'] != "8"

- name: Init DB
  command:
    cmd: postgresql-setup --initdb
    creates: /var/lib/pgsql/data/postgresql.conf
  when:
    - not postgresql_conf.stat.exists

- name: Ensure required services are enabled and started
  service:
    name: "postgresql"
    state: started
    enabled: yes

- name: Configure pg_hba.conf
  become: yes
  template:
    backup: yes
    dest: "/var/lib/pgsql/data/pg_hba.conf"
    src: pg_hba.conf.j2
    mode: 0600
    owner: postgres
    group: postgres
  when: pg_hba_conf is defined
  notify: restart postgresql

- name: Configure postgresql.conf
  become: yes
  template:
    backup: yes
    dest: "/var/lib/pgsql/data/postgresql.conf"
    src: postgresql.conf.j2
    mode: 0600
    owner: postgres
    group: postgres
  when: postgresql_conf is defined
  notify: restart postgresql


      #- name: Generate /etc/{{ __template_foo_config }}
      # template:
      # src: "{{ __template_foo_config }}.j2"
      # dest: /etc/{{ __template_foo_config }}
      # backup: yes
      # mode: 0400
      # notify: template handler to restart services
